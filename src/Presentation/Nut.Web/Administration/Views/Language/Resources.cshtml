@{
    var defaultGridPageSize = 20;
    var gridPageSizes = 20;
    //page title
    ViewBag.Title = T("Admin.Configuration.Languages.Localization").Text;
}
@Html.AntiForgeryToken()

<h3>
    <!-- Breadcrumb right aligned-->
    <ol class="breadcrumb pull-right">
        <li>
            <a href="#">@T("Admin.Home")</a>
        </li>
        <li>
            @T("Admin.Configuration")
        </li>
        <li class="active">
            @T("Admin.Configuration.Languages")
        </li>
    </ol>
    @T("Admin.Configuration.Languages.Localization")
    <!-- Small text for title-->
    @*<span class="text-sm hidden-xs">this is online Users.</span>*@
    <!-- Breadcrumb below title-->
</h3>

@if (ViewBag.AllLanguages != null) {

    <p>
        @T("Admin.Configuration.Languages.Select"):&nbsp;&nbsp;
        @Html.DropDownList("localeresource-language", (IEnumerable<SelectListItem>)ViewBag.AllLanguages, new { onchange = "onLocaleResourceLanguageSelected(this.value);" })
        <script type="text/javascript">
            function onLocaleResourceLanguageSelected(languageid) {
                window.location = '@(Url.Action("Resources") + "?languageId=")' + languageid;
            }
        </script>
    </p>
}

<p>@T("Admin.Configuration.Languages.Resources.Description")</p>

<div class="table-responsive b0">
    <div id="resources-grid"></div>

</div>

<script>
    $(document).ready(function () {
        $("#resources-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("Resources", "Language", new { languageId = ViewBag.LanguageId }))",
                        type: "POST",
                        dataType: "json",
                        contentType: "application/json"
                        //any-forgery does not work with this contentType for some reasons
                        //data: addAntiForgeryToken
                    },
                    create: {
                        url: "@Html.Raw(Url.Action("ResourceAdd", "Language", new { languageId = ViewBag.LanguageId }))",
                        type: "POST",
                        dataType: "json"
                    },
                    update: {
                        url:"@Html.Raw(Url.Action("ResourceUpdate", "Language"))",
                        type: "POST",
                        dataType: "json"
                    },
                    destroy: {
                        url: "@Html.Raw(Url.Action("ResourceDelete", "Language"))",
                        type: "POST",
                        dataType: "json"
                    },
                    parameterMap: function(data, operation) {
                        if (operation != "read") {
                            return data;
                        } else {
                            //for some reasons only such "Filter" data be parsed
                            return JSON.stringify(data);
                        }
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        id: "Id",
                        fields: {
                            Name: { editable: true, type: "string" },
                            Value: { editable: true, type: "string" },
                            Id: { editable: false, type: "number" }
                        }
                    }
                },
                requestEnd: function (e) {
                    if (e.type == "create" || e.type == "update") {
                        this.read();
                    }
                },
                error: function (e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(defaultGridPageSize),
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                pageSizes: [@(gridPageSizes)]
            },
            sortable: true,
            toolbar: ["create"],
            editable: {
                confirmation: false,
                mode: "inline"
            },
            filterable: {
                extra: false,
                operators: {
                    string: {
                        contains: "Contains",
                        eq: "Is equal to",
                        startswith: "Starts with"
                    }
                }
            },
            scrollable: false,
            columns: [{
                field: "Name",
                title: "@T("Admin.Configuration.Languages.Resources.Fields.Name")",
                width: 300,
                filterable: true,
                sortable: true
            }, {
                field: "Value",
                title: "@T("Admin.Configuration.Languages.Resources.Fields.Value")",
                width: 300,
                filterable: true,
                sortable: true

            }, {
                command: [{
                    name: "edit",
                    text: "@T("Admin.Common.Edit")"
                }, {
                    name: "destroy",
                    text: "@T("Admin.Common.Delete")"
                }],
                width: 200,
                filterable: false
            }]
        });
    });

</script>
