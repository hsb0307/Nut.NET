@model Nut.Admin.Models.Users.UserListModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nut.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nut.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Users").Text;
}

<h3>
    <!-- Breadcrumb right aligned-->
    <ol class="breadcrumb pull-right">
        <li>
            <a href="#">@T("Admin.Home")</a>
        </li>
        <li class="active">
            @T("Admin.Users")
        </li>
    </ol>
    @T("Admin.Users")
    <!-- Small text for title-->
    @*<span class="text-sm hidden-xs">this is online Users.</span>*@
    <!-- Breadcrumb below title-->
</h3>

<div class="table-responsive">
    <table class="table">
        <tr>
            <td>
                @Html.NopLabelFor(model => model.SearchUserRoleIds):
            </td>
            <td>
                @foreach (var customerRole in Model.AvailableUserRoles) {
                    <input type="checkbox" name="SearchCustomerRoleIds" value="@customerRole.Id"
                           @if (Model.SearchUserRoleIds != null && Model.SearchUserRoleIds.Contains(customerRole.Id)) { <text> checked="checked" </text>     } />@customerRole.Name @MvcHtmlString.Create("&nbsp;&nbsp;")
                    
                }
            </td>
            <td>
                @Html.NopLabelFor(model => model.SearchEmail):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchEmail)
            </td>
        </tr>
        <tr>
            <td>
                @Html.NopLabelFor(model => model.SearchUsername):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchUsername)

            </td>
            <td>
                @Html.NopLabelFor(model => model.SearchDepartmentId):
            </td>
            <td>
                @Html.DropDownListFor(model => model.SearchDepartmentId, Model.AvailableDepartments)
            </td>

        </tr>
        <tr>
            <td colspan="4">
                <input type="button" id="search-users" class="btn btn-info" value="@T(" Admin.Common.Search")" />
                <a href="@Url.Action("Create")" class="btn btn-info">@T("Admin.Common.AddNew")</a>
            </td>
        </tr>
    </table>
</div>

<!-- START table-responsive-->
<div class="table-responsive b0">
    <div id="users-grid"></div>

</div>
<!-- END table-responsive -->
<script>
    function deleteUser(id){
        swal({
            title : "@T("Admin.Common.AreYouSure")",
            text : "@("Admin.Common.DeleteText")@("Admin.Users")",
            type : "@("Admin.System.Warnings")",
            showCancelButton : true,
            confirmButtonColor : "#DD6B55",
            confirmButtonText : "@T("Admin.Common.Delete")",
            closeOnConfirm : false
        },
        function () {
            $.ajax({
                type: "POST",
                dataType: "text",
                url: '@(Url.Action("Delete", "User"))',
                data: { "id": id },
                success: function (d) {
                    var da=eval('(' + d + ')');
                    if(da.success==true){
                        swal("@T("Admin.Common.Delete")", da.message, "@T("Admin.Common.Success")");
                        location.href = "/admin/User/list";
                    }
                    else{
                        swal("@T("Admin.Common.Delete")!", da.message, "@T("Admin.Common.Error")");
                    }
                }
            })

        });
    }

    $(function () {
        $("#users-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("UserList", "User"))",
                        type: "POST",
                        dataType: "json",
                        data: additionalData
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors"
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(defaultGridPageSize),
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                pageSizes: [@(gridPageSizes)]
            },
            editable: {
                confirmation: false,
                mode: "inline"
            },
            scrollable: false,
            columns: [{
                field: "Id",
                title: "",
                width: 50
            }, {
                field: "Username",
                title: "@T("Admin.Users.Fields.Username")",
                width: 200
            },{
                field: "DepartmentModel.Name",
                title: "@T("Admin.Users.Fields.DepartmentsName")",

            },{
                field: "Email",
                title: "@T("Admin.Users.Fields.Email")",

            }, {
                field: "Active",
                title: "@T("Admin.Users.Fields.Active")",
                width: 100,
                template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=Active#.gif" />'
            }, {
                field: "UserRoleNames",
                title: "@T("Admin.Users.Users.List.UserRoles")"
            },{
                field: "Id",
                title: "@T("Admin.Common.Edit")",
                width: 150,
                template: '<a class="btn btn-sm btn-default" href="Edit/#=Id#">@T("Admin.Common.Edit")</a>&nbsp;&nbsp;&nbsp;<a class="btn btn-sm btn-default" href="javascript:void(0);" onclick="deleteUser(#=Id#)">@T("Admin.Common.Delete")</a>'
            }]
        });
    });
</script>

<script type="text/javascript">

    var selectedIds = [];
    $(function(){
        //search button
        $('#search-users').click(function () {
            var grid = $('#users-grid').data('kendoGrid');
            grid.dataSource.page(1); //new search. Set page size to 1
            //grid.dataSource.read(); we already loaded the grid above using "page" function
            //clear selected checkboxes
            $('.checkboxGroups').attr('checked', false).change();
            selectedIds = [];
            return false;
        });
    });

    function additionalData() {
        var customerRoleIds = [];
        $('[name=SearchCustomerRoleIds]:checked').each(function () {
            customerRoleIds.push($(this).val());
        });

        var data = {
            searchUserRoleIds: customerRoleIds.join(","),
            SearchEmail: $('#@Html.FieldIdFor(model => model.SearchEmail)').val(),
            SearchUsername: $('#@Html.FieldIdFor(model => model.SearchUsername)').val(),
            SearchDepartmentId: $('#@Html.FieldIdFor(model => model.SearchDepartmentId)').val()
        };
        addAntiForgeryToken(data);
        return data;
    }
</script>
