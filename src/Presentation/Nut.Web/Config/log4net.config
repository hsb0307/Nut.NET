<?xml version="1.0" encoding="utf-8"?>
<log4net>
  <!-- If you are looking here and want more output, first thing to do is change root/priority/@value to "INFO" or "ALL". -->

  <root>
    <!-- Value of priority may be ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF. -->
    <priority value="ALL" />
    <appender-ref ref="error-file" />
    <appender-ref ref="debug-file" />
    <!-- husb -->
    <appender-ref ref="AdoNetAppender" />
  </root>

  <!-- Example of turning on the output from a component or namespace. -->
  <!--
	<logger name="Apollo.Data.SessionLocator">
		<priority value="INFO" />
	</logger>
	-->
  <logger name="NHibernate.SQL">
    <priority value="DEBUG" />
  </logger>
  <logger name="Apollo">
    <!-- Messages coming from Apollo are sent to the attached debugger. -->
    <appender-ref ref="debugger"/>
    <!-- Note: if you put a ref=debugger into <root> element above and widen the priority to ALL or DEBUG,  then you will see nhibernate trace in the attached debugger as well. -->
  </logger>

  <logger name="Apollo.Localization">
    <!-- This source is very verbose - setting priority here to avoid flooding trace if root priority is lowered. -->
    <priority value="WARN" />
  </logger>

  <logger name="NHibernate.Cache">
    <!-- This source is very verbose - setting priority here to avoid flooding trace if root priority is lowered. -->
    <priority value="ERROR" />
  </logger>

  <logger name="NHibernate.AdoNet.AbstractBatcher">
    <!-- Displays failed table statements that are otherwise intercepted and rendered when unexpected. -->
    <priority value="OFF" />
  </logger>

  <logger name="NHibernate.AdoNet.AbstractBatcher">
    <!-- Displays failed table statements that are otherwise intercepted and rendered when unexpected. -->
    <priority value="OFF" />
  </logger>

  <logger name="NHibernate.Util.ADOExceptionReporter">
    <!-- Displays failed table statements that are otherwise intercepted and rendered when unexpected. -->
    <priority value="OFF" />
  </logger>

  <appender name="debugger" type="log4net.Appender.DebugAppender">
    <!-- Sends log messages to Visual Studio if attached. -->
    <immediateFlush value="true" />
    <layout type="log4net.Layout.SimpleLayout" />
  </appender>

  <appender name="debug-file" type="Nut.Web.Framework.Logging.NopFileAppender">
    <!-- Sends log messages to a file in App_Data. -->
    <file value="App_Data/Logs/Nop-debug" />
    <appendToFile value="true" />
    <!-- Immediate flush on error log, to avoid data loss with sudden termination. -->
    <immediateFlush value="true" />
    <staticLogFileName value="false" />
    <rollingStyle value="Date" />
    <datepattern value="-yyyy.MM.dd'.log'" />
    <!-- Prevents Apollo.exe from displaying locking debug messages. -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %logger - %message%newline" />
    </layout>
  </appender>

  <appender name="error-file" type="Nut.Web.Framework.Logging.NopFileAppender">
    <!-- Sends ERROR and FATAL log messages to a file in App_Data. -->
    <file value="App_Data/Logs/Nop-error" />
    <appendToFile value="true" />
    <!-- Immediate flush on error log, to avoid data loss with sudden termination. -->
    <immediateFlush value="true" />
    <staticLogFileName value="false" />
    <rollingStyle value="Date" />
    <datepattern value="-yyyy.MM.dd'.log'" />
    <!-- Prevents Apollo.exe from displaying locking debug messages. -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <filter type="log4net.Filter.LevelRangeFilter">
      <!-- Only ERROR and FATAL log messages end up in this target, even if child loggers accept lower priority. -->
      <levelMin value="ERROR" />
    </filter>
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %logger - %message%newline" />
    </layout>
  </appender>




<appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
    <bufferSize value="1" />
    <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <connectionString value="Data Source=192.168.0.252;Initial Catalog=medicine;Integrated Security=False;Persist Security Info=False;User ID=sa;Password=sa" />
    <commandText value="INSERT INTO Log ([CreatedOnUtc], [IpAddress], [ReferrerUrl], [ShortMessage],[FullMessage],[PageUrl]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
    <parameter>
      <parameterName value="@log_date" />
      <dbType value="DateTime" />
      <layout type="log4net.Layout.RawTimeStampLayout" />
    </parameter>
    <parameter>
      <parameterName value="@thread" />
      <dbType value="String" />
      <size value="255" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%thread" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@log_level" />
      <dbType value="String" />
      <size value="50" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%level" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@logger" />
      <dbType value="String" />
      <size value="255" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%logger" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@message" />
      <dbType value="String" />
      <size value="4000" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@exception" />
      <dbType value="String" />
      <size value="4000" />
      <layout type="log4net.Layout.ExceptionLayout" />
    </parameter>
  </appender>

</log4net>
