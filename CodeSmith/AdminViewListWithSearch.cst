<%-- 
Name:
Author: 
Description: 
--%>
<%@ Template Language="C#" TargetLanguage="Text" Language="C#" TargetLanguage="C#" Debug="True" %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table to get the data from." %>
<%--<%@ Property Name="NameSpace" Type="System.String" Category="Data" Description="Entities Namespace." %>
<%@ Property Name="ServiceNameSpace" Type="System.String" Category="Data" Description="Service Namespace." %>--%>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="System.Data" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text" %>

@model <%= GetEntityName(SourceTable.Name) %>ListModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nut.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nut.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Finance.<%=  StringUtil.ToPlural(GetEntityName(SourceTable.Name)) %>").Text;
}
<h3>
    <!-- Breadcrumb right aligned-->
    <ol class="breadcrumb pull-right">
        <li>
            <a href="#">@T("Admin.Home")</a>
        </li>
        <li class="active">
            @T("Admin.<%=  StringUtil.ToPlural(SourceTable.Name) %>s")
        </li>
    </ol>
    @T("Admin.<%=  StringUtil.ToPlural(SourceTable.Name) %>s")
    <!-- Small text for title-->
    @*<span class="text-sm hidden-xs">this is online Users.</span>*@
    <!-- Breadcrumb below title-->
</h3>

<p>
    <a href="@Url.Action("Create")" class="btn btn-info">@T("Admin.Common.AddNew")</a>
</p>

<div class="table-responsive">
    <table class="table">
        <tr>
            <td>
                @Html.NopLabelFor(model => model.SearchName):
            </td>
            <td>
                 @Html.EditorFor(model => model.SearchName)
            </td>
            <td>
                @Html.NopLabelFor(model => model.SearchEmail):
            </td>
            <td>
                @Html.EditorFor(model => model.SearchEmail)
            </td>
        </tr>
        <tr>
            <td colspan="4">
                <input type="button" id="btnSearch" class="btn btn-info" value="@T(" Admin.Common.Search")" />
                <a href="@Url.Action("Create")" class="btn btn-info">@T("Admin.Common.AddNew")</a>
            </td>
        </tr>
        
    </table>
</div>


<!-- START table-responsive-->
<div class="table-responsive b0">
    <div id="<%= SourceTable.Name.ToLower() %>-grid"></div>

</div>
<!-- END table-responsive -->

<script type="text/javascript">
    $(document).ready(function () {
        $("#<%= StringUtil.ToPlural(GetEntityName(SourceTable.Name)).ToLower() %>-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("List", "<%= GetEntityName(SourceTable.Name) %>"))",
                        type: "POST",
                        dataType: "json",
                        data: additionalData
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors"
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(defaultGridPageSize),
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                pageSizes: [@(gridPageSizes)]
            },
            editable: {
                confirmation: false,
                mode: "inline"
            },
            scrollable: false,
            columns: [{
             <% foreach(ColumnSchema col in SourceTable.Columns) { %>
                field: "<%= col.Name %>",
                title: "@T("Admin.Configuration.<%=  StringUtil.ToPlural(GetEntityName(SourceTable.Name)) %>.Fields.<%= col.Name %>")"
            }, {    
            <% } %>
                field: "Id",
                title: "@T("Admin.Common.Edit")",
                width: 100,
                template: '<a class="btn btn-sm btn-default" href="Edit/#=Id#">@T("Admin.Common.Edit")</a>&nbsp;&nbsp;<a class="btn btn-sm btn-default" href="javascript:void(0);" onclick="Delete<%= SourceTable.Name %>(#=Id#)">@T("Admin.Common.Delete")</a>'
            }]
        });
    });
    function Delete<%= SourceTable.Name %>(id) {
        if (confirm('@T("Common.DeleteConfirmation")')) {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: '@(Url.Action("Delete", "<%= SourceTable.Name %>""))',
                data: { "id": id }
            })
            .done(function (data, status, xhr) {
                if (data.success) {
                    alert(data.message);
                    window.document.location.reload();
                } else {
                    alert(data.message);
                }
            })
            .fail(function (xhr, status, error) {
                alert('@T("Common.Error")');
            })
            .always(function () {

            });
        }  
    }
</script>
<script type="text/javascript">
    $(document).ready(function () {
        //search button
        $('#btnSearch').click(function () {
            //search
            var grid = $('#<%= StringUtil.ToPlural(GetEntityName(SourceTable.Name)).ToLower() %>-grid').data('kendoGrid');
            grid.dataSource.page(1); //new search. Set page size to 1
            //grid.dataSource.read(); we already loaded the grid above using "page" function
            return false;
        });

        $("#@Html.FieldIdFor(model => model.SearchName)").keydown(function (event) {
            if (event.keyCode == 13) {
                $("#btnSearch").click();
                return false;
            }
        });
    });

    function additionalData() {
        return {
            SearchName: $('#@Html.FieldIdFor(model => model.SearchName)').val(),
            SearchEmail: $('#@Html.FieldIdFor(model => model.SearchEmail)').val()
        };
    }
</script>


<script runat="template">
// My methods here.
public string GetEntityName(string tableName)
{
  return tableName;//.Remove(0, "Finance".Length);
}
</script>